import { type Session } from "next-auth";
import { SessionProvider } from "next-auth/react";
import { type AppProps, type AppType } from "next/app";

import { api } from "~/utils/api";

import "~/styles/globals.css";
import { type NextPage } from "next";
import Head from "next/head";


export type NextPageWithLayout<P = unknown, IP = P> = NextPage<P, IP> & {
  // getLayout?: (page: ReactElement) => ReactNode,
  Layout?: typeof DefaultLayout,
}

type AppPropsWithLayout = AppProps & {
  Component: NextPageWithLayout
}

const DefaultLayout: React.FC<React.PropsWithChildren> = ({ children }) => {
  return (
      <>
          {children}
      </>
  );
};

const MyApp: AppType<{ session: Session | null }> = ({
  Component,
  pageProps: { session, ...pageProps },
}: AppPropsWithLayout) => {

  const Wrapper = Component.Layout ?? DefaultLayout;
  return (
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    <SessionProvider session={session}>
      <Wrapper>
        <Head>
        <title>DuDat</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        </Head>
        <Component {...pageProps} />
      </Wrapper>
      
    </SessionProvider>
  );
};

export default api.withTRPC(MyApp);
